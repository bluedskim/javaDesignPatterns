@startuml Decorator 패턴(김동석)

title Decorator 패턴(김동석)

abstract class BeverageBase {
	protected String description
	public String getDescription()
	public abstract double getCost()
}

class BlackTea {
	public double getCost()
}

class Espresso {
	public double getCost()
}

class GreenTea {
	public double getCost()
}

abstract class CondimentsDecoratorBase {
	protected BeverageBase beverage
}

class ChocolateCondiment {
	public ChocolateCondiment(BeverageBase beverage)
	public double getCost()
}

class MilkCondiment {
	public MilkCondiment(BeverageBase beverage)
	public double getCost()
}

class SugarCondiment {
	public SugarCondiment(BeverageBase beverage)
	public double getCost()
}

BeverageBase <|-- BlackTea
BeverageBase <|-- Espresso
BeverageBase <|-- GreenTea
BeverageBase <|-- CondimentsDecoratorBase
BeverageBase <.. CondimentsDecoratorBase

CondimentsDecoratorBase <|-- ChocolateCondiment
CondimentsDecoratorBase <|-- MilkCondiment
CondimentsDecoratorBase <|-- SugarCondiment
@enduml